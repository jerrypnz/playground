!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
__CORE_H	core.h	3;"	d
_server_ctx_t	core.h	/^typedef struct _server_ctx_t {$/;"	s
_server_ctx_t::listen_fd	core.h	/^    int         listen_fd;$/;"	m	struct:_server_ctx_t	access:public
_server_ctx_t::setting	core.h	/^    server_setting_t    *setting;$/;"	m	struct:_server_ctx_t	access:public
_server_ctx_t::worker_list	core.h	/^    worker_t    *worker_list;$/;"	m	struct:_server_ctx_t	access:public
_server_ctx_t::worker_size	core.h	/^    size_t      worker_size;$/;"	m	struct:_server_ctx_t	access:public
_server_setting_t	core.h	/^typedef struct _server_setting_t {$/;"	s
_server_setting_t::initial_worker_count	core.h	/^    int         initial_worker_count;$/;"	m	struct:_server_setting_t	access:public
_server_setting_t::port	core.h	/^    int         port;$/;"	m	struct:_server_setting_t	access:public
_worker_ctl_msg_t	core.h	/^typedef struct _worker_ctl_msg_t {$/;"	s
_worker_ctl_msg_t::cmd	core.h	/^    int         cmd;$/;"	m	struct:_worker_ctl_msg_t	access:public
_worker_ctl_msg_t::data	core.h	/^    int         data;$/;"	m	struct:_worker_ctl_msg_t	access:public
_worker_ctx_t	core.h	/^typedef struct _worker_ctx_t {$/;"	s
_worker_ctx_t	worker.h	/^typedef struct _worker_ctx_t {$/;"	s
_worker_ctx_t::conn_sock_fd	worker.h	/^    int     conn_sock_fd;$/;"	m	struct:_worker_ctx_t	access:public
_worker_ctx_t::ctl_sock_fd	core.h	/^    int             ctl_sock_fd;$/;"	m	struct:_worker_ctx_t	access:public
_worker_ctx_t::server_ctx	core.h	/^    server_ctx_t    *server_ctx;$/;"	m	struct:_worker_ctx_t	access:public
_worker_t	core.h	/^typedef struct _worker_t {$/;"	s
_worker_t::ctl_sock_fd	core.h	/^    int         ctl_sock_fd;$/;"	m	struct:_worker_t	access:public
_worker_t::pid	core.h	/^    pid_t       pid;$/;"	m	struct:_worker_t	access:public
cmd	core.h	/^    int         cmd;$/;"	m	struct:_worker_ctl_msg_t	access:public
conn_sock_fd	worker.h	/^    int     conn_sock_fd;$/;"	m	struct:_worker_ctx_t	access:public
ctl_sock_fd	core.h	/^    int             ctl_sock_fd;$/;"	m	struct:_worker_ctx_t	access:public
ctl_sock_fd	core.h	/^    int         ctl_sock_fd;$/;"	m	struct:_worker_t	access:public
data	core.h	/^    int         data;$/;"	m	struct:_worker_ctl_msg_t	access:public
fork_worker	core.h	/^pid_t fork_worker(server_ctx_t *ctx, int idx, int ctl_fd);$/;"	p	signature:(server_ctx_t *ctx, int idx, int ctl_fd)
initial_worker_count	core.h	/^    int         initial_worker_count;$/;"	m	struct:_server_setting_t	access:public
listen_fd	core.h	/^    int         listen_fd;$/;"	m	struct:_server_ctx_t	access:public
main	main.c	/^int main(int argc, const char *argv[])$/;"	f	signature:(int argc, const char *argv[])
pid	core.h	/^    pid_t       pid;$/;"	m	struct:_worker_t	access:public
port	core.h	/^    int         port;$/;"	m	struct:_server_setting_t	access:public
server_ctx	core.h	/^    server_ctx_t    *server_ctx;$/;"	m	struct:_worker_ctx_t	access:public
server_ctx_t	core.h	/^} server_ctx_t;$/;"	t	typeref:struct:_server_ctx_t
server_destroy	core.c	/^int server_destroy(server_ctx_t *server_ctx);$/;"	p	file:	signature:(server_ctx_t *server_ctx)
server_destroy	core.h	/^int server_destroy(server_ctx_t *ctx);$/;"	p	signature:(server_ctx_t *ctx)
server_event_cycle	core.c	/^int server_event_cycle(server_ctx_t *server_ctx);$/;"	p	file:	signature:(server_ctx_t *server_ctx)
server_event_cycle	core.h	/^int server_event_cycle(server_ctx_t *ctx);$/;"	p	signature:(server_ctx_t *ctx)
server_init	core.c	/^int server_init(server_ctx_t *server_ctx, server_setting_t *setting) {$/;"	f	signature:(server_ctx_t *server_ctx, server_setting_t *setting)
server_init	core.h	/^int server_init(server_ctx_t *ctx, server_setting_t *settings, int total_worker_size);$/;"	p	signature:(server_ctx_t *ctx, server_setting_t *settings, int total_worker_size)
server_setting_t	core.h	/^} server_setting_t;$/;"	t	typeref:struct:_server_setting_t
setting	core.h	/^    server_setting_t    *setting;$/;"	m	struct:_server_ctx_t	access:public
worker_ctl_msg_t	core.h	/^} worker_ctl_msg_t;$/;"	t	typeref:struct:_worker_ctl_msg_t
worker_ctx_t	core.h	/^} worker_ctx_t;$/;"	t	typeref:struct:_worker_ctx_t
worker_ctx_t	worker.h	/^} worker_ctx_t;$/;"	t	typeref:struct:_worker_ctx_t
worker_init	core.c	/^int worker_init(worker_ctx_t *wk_ctx, server_ctx_t *server_ctx, int ctl_sock_fd) {$/;"	f	signature:(worker_ctx_t *wk_ctx, server_ctx_t *server_ctx, int ctl_sock_fd)
worker_init	core.h	/^int worker_init(worker_ctx_t *ctx);$/;"	p	signature:(worker_ctx_t *ctx)
worker_list	core.h	/^    worker_t    *worker_list;$/;"	m	struct:_server_ctx_t	access:public
worker_main	core.c	/^int worker_main(worker_ctx_t *wk_ctx) {$/;"	f	signature:(worker_ctx_t *wk_ctx)
worker_main	core.h	/^int worker_main(worker_ctx_t *ctx);$/;"	p	signature:(worker_ctx_t *ctx)
worker_size	core.h	/^    size_t      worker_size;$/;"	m	struct:_server_ctx_t	access:public
worker_t	core.h	/^} worker_t;$/;"	t	typeref:struct:_worker_t
